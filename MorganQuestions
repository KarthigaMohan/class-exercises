
1. How HashMap works in Java? 
HashMap is the most used data structure in java because it gives almost constant time performance of O(1) for put and get operations irrespective of how big is the data.HashMap stores the data in the form of key-value pairs. Each key-value pair is stored in an object of Entry<K, V> class. Entry<K, V> class is the static inner class of HashMap. 
	This inner class has four fields. key, value, next and hash.
		key : It stores the key of an element and its final.
		value : It holds the value of an element.
		next : It holds the pointer to next key-value pair. This attribute makes the key-value pairs stored as a linked list.
		hash : It holds the hashcode of the key.
 All these Entry<K, V> objects are stored in an array called table[]. 
It doesn’t inserts the objects as you put them into HashMap i.e first element at index 0, second element at index 1 and so on. Instead it uses the hashcode of the key to decide the index for a particular key-value pair. It is called Hashing.


2. Count the occurrences of numbers in an array
Use Arrays.sort() to arrange them in an order. Once the element is found, keep counting until the next element is different. Then stop and return count. 



3. What is the difference between JDK 1.5 and JDK 1.4?
The major enhancement for JDK 1.5 version

1. Generics
2. Enhanced for loop
3. Autoboxing/Unboxing
4.Type Safe Enums
5. Varargs
6. Static import
7. Annotations


4. What is the HashCode and Equal method?
In java equals() method is used to compare equality of two Objects. The equality can be compared in two ways:

	Shallow comparison: The default implementation of equals method is defined in Java.lang.Object class which simply checks if two Object 			references (say x and y) refer to the same Object. i.e. It checks if x == y. Since Object class has no data members that 			define its state, it is also known as shallow comparison.
   	Deep Comparison: Suppose a class provides its own implementation of equals() method in order to compare the Objects of that class 			w.r.t state of the Objects. That means data members (i.e. fields) of Objects are to be compared with one another. Such 			Comparison based on data members is known as deep comparison.

HashCode() returns the hashcode value as an Integer. Hashcode value is mostly used in hashing based collections like HashMap, HashSet, HashTable….etc. This method must be overridden in every class which overrides equals() method.


5. Talk about the database. 
Database is a systematic collection of data. Databases support storage and  manipulation of data. Database Management System (DBMS) is a collection of programs which enables its users to access database, manipulate data, reporting / representation of  data .
It also helps to control access to the  database. 4 Types:
	Hierarchical: This type of DBMS employs the "parent-child" relationship of storing data.
	Network DBMS: This type of DBMS supports many-to many relations.  
	Relational DBMS: This type of DBMS defines database relationships in form of tables, also known as relations. 
	Object Oriented Relation DBMS: This type supports storage of new data types.


6. What is index, the advantage and disadvantage?
Indexes are special lookup tables that the database search engine can use to speed up data retrieval. Simply put, an index is a pointer to data in a table. 
	Advantage: 
		Their use in queries usually results in much better performance.
    		They make it possible to quickly retrieve (fetch) data i.e SELECT and WHERE clauses. 
    		They can be used for sorting. A post-fetch-sort operation can be eliminated.
    		Unique indexes guarantee uniquely identifiable records in the database.
	Disadvantage: 
		Updating a table with indexes takes more time than updating a table without (because the indexes also need an update). 			They decrease performance on inserts, updates, and deletes.
   		They take up space (this increases with the number of fields used and the length of the fields).
    		Some databases will monocase values in fields that are indexed.




7. What is left join? 
The SQL LEFT JOIN returns all rows from the left table, even if there are no matches in the right table. This means that if the ON clause matches 0 (zero) records in the right table; the join will still return a row in the result, but with NULL in each column from the right table.



8. 

